name: Latest Firmware



jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch latest release information
        id: fetch_latest_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/prusa3d/Prusa-Firmware-ESP32-Cam/releases/latest)
          echo "$latest_release" > latest_release.json

      - name: Extract download URLs
        id: extract_urls
        run: |
          download_urls=$(jq -r '.assets[] | select(.name | startswith("esp32")) | .browser_download_url' latest_release.json)
          echo "$download_urls" > download_urls.txt

      - name: Create webflash directory
        run: mkdir -p webflash

      - name: Download ZIP files
        run: |
          while IFS= read -r url; do
            wget -P webflash "$url"
          done < download_urls.txt

      - name: Extract ZIP files
        run: |
          for file in webflash/*.zip; do
            unzip -o -d webflash "$file"
            rm "$file"
          done

      - name: List extracted files for debugging
        run: find webflash -type f

      - name: Update manifest.json
        run: |
          release_tag=$(jq -r '.tag_name' latest_release.json)
          manifest_file="webflash/manifest.json"
          jq --arg tag "$release_tag" '
            .version = $tag |
            .builds[0].devices["esp32-wrover-dev"].parts[0].path = "esp32-wrover-dev/ESP32_PrusaConnectCam.ino.bootloader.bin" |
            .builds[0].devices["esp32-wrover-dev"].parts[1].path = "esp32-wrover-dev/ESP32_PrusaConnectCam.ino.partitions.bin" |
            .builds[0].devices["esp32-wrover-dev"].parts[2].path = "esp32-wrover-dev/ESP32_PrusaConnectCam.ino.bin" |
            .builds[0].devices["esp32-s3-eye-22"].parts[0].path = "esp32-s3-eye-22/ESP32_PrusaConnectCam.ino.bootloader.bin" |
            .builds[0].devices["esp32-s3-eye-22"].parts[1].path = "esp32-s3-eye-22/ESP32_PrusaConnectCam.ino.partitions.bin" |
            .builds[0].devices["esp32-s3-eye-22"].parts[2].path = "esp32-s3-eye-22/ESP32_PrusaConnectCam.ino.bin" |
            .builds[0].devices["default"].parts[0].path = "esp32-cam/ESP32_PrusaConnectCam.ino.bootloader.bin" |
            .builds[0].devices["default"].parts[1].path = "esp32-cam/ESP32_PrusaConnectCam.ino.partitions.bin" |
            .builds[0].devices["default"].parts[2].path = "esp32-cam/ESP32_PrusaConnectCam.ino.bin" |
            .builds[0].parts[0].path = "ESP32_PrusaConnectCam.ino.bootloader.bin" |
            .builds[0].parts[1].path = "ESP32_PrusaConnectCam.ino.partitions.bin" |
            .builds[0].parts[2].path = "ESP32_PrusaConnectCam.ino.bin"
          ' "$manifest_file" > tmp_manifest.json && mv tmp_manifest.json "$manifest_file"

      - name: Stage changes
        run: git add webflash/ latest_release.json download_urls.txt

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git commit -m "Update manifest.json to version $release_tag"
          git push

